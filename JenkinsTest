pipeline {
    agent any

    environment {
        // Set these environment variables globally within the pipeline
        WORKSPACE_DIR = "${pwd()}"
        TEMP_DIR = "${WORKSPACE_DIR}/tempdir"
    }

    stages {
        stage('Sync Files') {
            steps {
                sh 'chmod +x old_scripts/Sync_files.sh'
                sh 'old_scripts/Sync_files.sh'
            }
        }
        stage('Restoring client.test packages') {
            steps {
                echo 'Restoring client.test packages'
                dotnetRestore project: "${env.TEMP_DIR}/Rise.Client.Tests/", sdk: 'dotnet_8.0'
            }
        }
        stage('Restoring domain.test packages') {
            steps {
                echo 'Restoring domain.test packages'
                dotnetRestore project: "${env.TEMP_DIR}/Rise.Domain.Tests/", sdk: 'dotnet_8.0'
            }
        }
        stage('Restoring playwright.test packages') {
            steps {
                echo 'Restoring playwright.test packages'
                dotnetRestore project: "${env.TEMP_DIR}/Rise.PlaywrightTests/", sdk: 'dotnet_8.0'
            }
        }
        stage('Restoring server.test packages') {
            steps {
                echo 'Restoring server.test packages'
                dotnetRestore project: "${env.TEMP_DIR}/Rise.Server.Tests/", sdk: 'dotnet_8.0'
            }
        }

        stage('Run Tests') {
                stage ('Client Tests') {
                    steps {
                        echo 'Running client Tests'
                        //dotnetTest project: "${env.TEMP_DIR}/Rise.Client.Tests/", sdk: 'dotnet_8.0', unstableIfWarnings: true
                    }
                }
                stage ('Domain Tests') {
                    steps {
                        echo 'Running Domain Tests'
                        //dotnetTest project: "${env.TEMP_DIR}/Rise.Domain.Tests/", sdk: 'dotnet_8.0', unstableIfWarnings: true
                    }
                }
                stage ('Playwright Tests') {
                    steps {
                        echo 'Running Playwright Tests'
                        //dotnetTest project: "${env.TEMP_DIR}/Rise.PlaywrightTests/", sdk: 'dotnet_8.0', unstableIfWarnings: true
                    }
                }
                stage ('Server Tests') {
                    steps {
                        echo 'Running Server Tests'
                        //dotnetTest project: "${env.TEMP_DIR}/Rise.Server.Tests/", sdk: 'dotnet_8.0', unstableIfWarnings: true
                    }
                }
            
        }
    }
    post {
        always {
            echo 'send discord notification'
            discordSend description: "Jenkins Pipeline Build", footer: "", link: env.BUILD_URL, result: currentBuild.currentResult, title: env.JOB_NAME, webhookURL: "https://discord.com/api/webhooks/1317054110415192125/mTtKDLh2HlNweJp6ljUjDYDIiaAX2Ia3Vo6TfMGD1prBzLTTewwl1CveOQAYYmtoog-T"
        }
    }
}
