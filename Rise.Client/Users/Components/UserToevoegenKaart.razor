﻿@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using Rise.Client.Users.Services
@using Rise.Shared.Users
@using Blazored.FluentValidation

<div class="row">
    <div class="col p-2">
        <div class="card">
            <div class="card-header px-4" style="background-color: black; color: white;">
                <b style="font-size: 20px;">Gebruiker toevoegen</b>
            </div>
            <div class="card-body d-flex flex-column p-4">
                <div class="row mb-auto">
                    <p>Vul onderstaande velden in en voeg een gebruiker toe.</p>
                </div>
                 @if ( roles != null)
{
                    <EditForm Model="@createUserDto" OnValidSubmit="UserToevoegen">
                    <FluentValidationValidator />
                   
                    <div class="row">
                        <div class="col-lg-12 col-xl-6">
                            <div class="form-group pb-3">
                                <label for="firstname">Voornaam</label>
                                <InputText class="form-control" id="firstname" @bind-Value="createUserDto.FirstName" />
                                <ValidationMessage For="@(() => createUserDto.FirstName)" />
                            </div>
                            <div class="form-group pb-3">
                                <label for="name">Naam</label>
                                <InputText class="form-control" id="name" @bind-Value="createUserDto.LastName" />
                                <ValidationMessage For="@(() => createUserDto.LastName)" />
                            </div>
                            <div class="form-group pb-3">
                                <label for="email">Email</label>
                                <InputText type="email" class="form-control" id="email" @bind-Value="createUserDto.Email" />
                                <ValidationMessage For="@(() => createUserDto.Email)" />
                                @if (!string.IsNullOrEmpty(emailErrorMessage))
                                {
                                   <div class="text-danger" style="font-size: small;">@emailErrorMessage</div>
                                }
                            </div>
                            <div class="form-group pb-3">
                                <label for="password">Wachtwoord</label>
                                <InputText type="password" class="form-control" id="password" @bind-Value="createUserDto.Password" />
                                <ValidationMessage For="@(() => createUserDto.Password)" />
                            </div>
                            <div class="form-group pb-3">
                                <label for="rol">Rol </label>
                                <select class="form-control" id="rol" @bind="createUserDto.RoleId">
                                    <option value="0">Selecteer een rol uit de lijst</option>
                                    @foreach (var rol in roles)
                                    {
                                        <option value="@rol.Id">@rol.Name</option>
                                    }
                                </select>
                                <ValidationMessage For="@(() => createUserDto.RoleId)" />
                            </div>
                            
                         
                        </div>
                        
                    </div>
                    <div class="row justify-content-end me-1">
                            <button class="btn btn-dark" type="submit"  style="width: auto;">Voeg gebruiker toe</button>
                    </div>
                </EditForm>
}
            </div>
        </div>
    </div>
</div>